//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigurationContext {

    public ConfigurationEntity gameMapConfigurationEntity { get { return GetGroup(ConfigurationMatcher.GameMapConfiguration).GetSingleEntity(); } }
    public GameMapConfigurationComponent gameMapConfiguration { get { return gameMapConfigurationEntity.gameMapConfiguration; } }
    public bool hasGameMapConfiguration { get { return gameMapConfigurationEntity != null; } }

    public ConfigurationEntity SetGameMapConfiguration(GeometryTowers.Configuration.IGameMapConfiguration newValue) {
        if (hasGameMapConfiguration) {
            throw new Entitas.EntitasException("Could not set GameMapConfiguration!\n" + this + " already has an entity with GameMapConfigurationComponent!",
                "You should check if the context already has a gameMapConfigurationEntity before setting it or use context.ReplaceGameMapConfiguration().");
        }
        var entity = CreateEntity();
        entity.AddGameMapConfiguration(newValue);
        return entity;
    }

    public void ReplaceGameMapConfiguration(GeometryTowers.Configuration.IGameMapConfiguration newValue) {
        var entity = gameMapConfigurationEntity;
        if (entity == null) {
            entity = SetGameMapConfiguration(newValue);
        } else {
            entity.ReplaceGameMapConfiguration(newValue);
        }
    }

    public void RemoveGameMapConfiguration() {
        gameMapConfigurationEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigurationEntity {

    public GameMapConfigurationComponent gameMapConfiguration { get { return (GameMapConfigurationComponent)GetComponent(ConfigurationComponentsLookup.GameMapConfiguration); } }
    public bool hasGameMapConfiguration { get { return HasComponent(ConfigurationComponentsLookup.GameMapConfiguration); } }

    public void AddGameMapConfiguration(GeometryTowers.Configuration.IGameMapConfiguration newValue) {
        var index = ConfigurationComponentsLookup.GameMapConfiguration;
        var component = (GameMapConfigurationComponent)CreateComponent(index, typeof(GameMapConfigurationComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameMapConfiguration(GeometryTowers.Configuration.IGameMapConfiguration newValue) {
        var index = ConfigurationComponentsLookup.GameMapConfiguration;
        var component = (GameMapConfigurationComponent)CreateComponent(index, typeof(GameMapConfigurationComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameMapConfiguration() {
        RemoveComponent(ConfigurationComponentsLookup.GameMapConfiguration);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigurationMatcher {

    static Entitas.IMatcher<ConfigurationEntity> _matcherGameMapConfiguration;

    public static Entitas.IMatcher<ConfigurationEntity> GameMapConfiguration {
        get {
            if (_matcherGameMapConfiguration == null) {
                var matcher = (Entitas.Matcher<ConfigurationEntity>)Entitas.Matcher<ConfigurationEntity>.AllOf(ConfigurationComponentsLookup.GameMapConfiguration);
                matcher.componentNames = ConfigurationComponentsLookup.componentNames;
                _matcherGameMapConfiguration = matcher;
            }

            return _matcherGameMapConfiguration;
        }
    }
}
