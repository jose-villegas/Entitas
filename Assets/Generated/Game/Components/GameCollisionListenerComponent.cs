//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CollisionListenerComponent collisionListener { get { return (CollisionListenerComponent)GetComponent(GameComponentsLookup.CollisionListener); } }
    public bool hasCollisionListener { get { return HasComponent(GameComponentsLookup.CollisionListener); } }

    public void AddCollisionListener(System.Collections.Generic.List<ICollisionListener> newValue) {
        var index = GameComponentsLookup.CollisionListener;
        var component = (CollisionListenerComponent)CreateComponent(index, typeof(CollisionListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCollisionListener(System.Collections.Generic.List<ICollisionListener> newValue) {
        var index = GameComponentsLookup.CollisionListener;
        var component = (CollisionListenerComponent)CreateComponent(index, typeof(CollisionListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCollisionListener() {
        RemoveComponent(GameComponentsLookup.CollisionListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCollisionListener;

    public static Entitas.IMatcher<GameEntity> CollisionListener {
        get {
            if (_matcherCollisionListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CollisionListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCollisionListener = matcher;
            }

            return _matcherCollisionListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddCollisionListener(ICollisionListener value) {
        var listeners = hasCollisionListener
            ? collisionListener.value
            : new System.Collections.Generic.List<ICollisionListener>();
        listeners.Add(value);
        ReplaceCollisionListener(listeners);
    }

    public void RemoveCollisionListener(ICollisionListener value, bool removeComponentWhenEmpty = true) {
        var listeners = collisionListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveCollisionListener();
        } else {
            ReplaceCollisionListener(listeners);
        }
    }
}
